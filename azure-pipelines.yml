# trigger:
# - master

pool:
  vmImage: windows-latest

# resources:
#   repositories:
#   - repository: MyGitHubRepo1 # The name used to reference this repository in the checkout step
#     type: github
#     endpoint: github.com_poyu-huang
#     name: poyu-huang/CustomWebSite
#     trigger:
#     - master
  # - repository: MyGitHubRepo2 # The name used to reference this repository in the checkout step
  #   type: github
  #   endpoint: github.com_poyu-huang
  #   name: poyu-huang/CustomWebSite/BookmarkApp
  #   trigger:
  #   - master

trigger:
  # batch: true
  branches:
    include:
    - master
  paths:
    include:
      - CashApp
      - BookmarkApp

# parameters:
#   - name: RestoreBuildProjects
#     type: string
#     values:
#     - '**/*.csproj'
#     - '!*Tests/*.csproj'

variables:
  buildConfiguration: 'Release'

steps:
- checkout: MyGitHubRepo

- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    # projects: '$(Parameters.RestoreBuildProjects)'
    projects: |
      **/*.csproj
      !*Tests/*.csproj

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: |
      **/*.csproj
      !*Tests/*.csproj
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: false
    projects: |
      **/*.csproj
      !*Tests/*.csproj
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()